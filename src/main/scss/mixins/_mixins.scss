@import "../variables/variables";

@mixin scroll-indicator {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    background: /* Shadow */
            radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 50% 0 / 100% 9px no-repeat,
            radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 50% 100% / 100% 9px no-repeat;

    > * {
        box-sizing: border-box;
        min-height: 100%;

        background: /* Cover */
                linear-gradient($color-background-primary 30%, rgba(255, 255, 255, 0)) 50% 0 / 100% 40px no-repeat,
                linear-gradient(rgba(255, 255, 255, 0), $color-background-primary 70%) 50% 100% / 100% 40px no-repeat;

    }
}

@mixin respond-to($media) {
    @if $media == input {
        @media only screen and (max-width: $breakpoint-input) {
            @content;
        }
    } @else if $media == small {
        @media only screen and (max-width: $breakpoint-small) {
            @content;
        }
    } @else if $media == smallx {
        @media only screen and (min-width: $breakpoint-small + 1) {
            @content;
        }
    } @else if $media == medium {
        @media only screen and (max-width: $breakpoint-medium) {
            @content;
        }
    } @else if $media == mediumx {
        @media only screen and (min-width: $breakpoint-medium + 1) {
            @content;
        }
    } @else if $media == large {
        @media only screen and (min-width: $breakpoint-large) {
            @content;
        }
    } @else if $media == largex {
        @media only screen and (min-width: $breakpoint-large-x) {
            @content;
        }
    } @else if $media == miniscule-height {
        @media only screen and (max-height: $breakpoint-miniscule-height) {
            @content;
        }
    } @else if $media == mini-height {
        @media only screen and (max-height: $breakpoint-mini-height) {
            @content;
        }
    } @else if $media == mini-width {
        @media only screen and (max-width: $breakpoint-mini-width) {
            @content;
        }
    } @else if $media == mini {
        @media only screen and (max-width: $breakpoint-mini-width), screen and (max-height: $breakpoint-mini-height) {
            @content;
        }
    }
}

@mixin content-focusable($color: $color-blue, $size: 2px, $padding-before: 2px, $padding-after: 0) {
    border: 0 solid $color;

    > * {
        padding: $padding-before;
    }

    &:focus {
        border-width: $size;

        > * {
            padding: $padding-after;
        }
    }
}

@mixin noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}